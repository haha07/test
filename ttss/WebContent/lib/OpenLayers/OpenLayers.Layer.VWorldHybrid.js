/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for  * full list of contributors). Published under the 2-clause BSD license. * See license.txt in the OpenLayers distribution or repository for the * full text of the license. *//** * @requires OpenLayers/Layer/TMS.js * http://xdworld.vworld.kr:8080/2d/Hybrid/201301/17/111756/50780.png */OpenLayers.Layer.VWorldHybrid = OpenLayers.Class(OpenLayers.Layer.TMS, {    name: "VWorld Street Map",     url: "http://xdworld.vworld.kr:8080/2d/Hybrid/201301/",    blankimage: null, // "http://map.vworld.kr/images/maps/no_service.gif",        attribution: '<a target="_blank" href="http://map.vworld.kr/" '        + 'style="float: left; width: 353px; height: 29px; cursor: pointer; background-image: url(http://map.vworld.kr/images/maps/logo_openplatform.png); background-repeat: no-repeat no-repeat; " '        + 'title="VWorld 지도로 보시려면 클릭하세요."></a>'         + '',            sphericalMercator: true,    type: 'png',    transitionEffect: 'resize',    tileSize: new OpenLayers.Size(256, 256),    buffer: 0,    serverMaxlevel: 18,    numZoomLevels: 21,    maxResolution: 156543.0339,    units: "m",    projection: new OpenLayers.Projection("EPSG:900913"),    displayOutsideMaxExtent: false,    maxExtent: new OpenLayers.Bounds(-20037508.34, -20037508.34, 20037508.34, 20037508.34),    validBounds: new OpenLayers.Bounds(124.41714675, 33.0022776231, 131.971482078, 38.6568782776),        initialize: function(name, options) {        this.validBounds = this.validBounds.transform(new OpenLayers.Projection("EPSG:4326"), new OpenLayers.Projection("EPSG:900913"));                if (options && options.sphericalMercator || this.sphericalMercator) {            options = OpenLayers.Util.extend({                projection: "EPSG:900913",                numZoomLevels: 21            }, options);        }                OpenLayers.Layer.Grid.prototype.initialize.apply(this, [            name || this.name, this.url || this.url, {}, options        ]);    },        clone: function(obj) {        if (obj == null) {            obj = new OpenLayers.Layer.VWorldHybrid(this.name, this.getOptions());        }        obj = OpenLayers.Layer.XYZ.prototype.clone.apply(this, [obj]);        return obj;    },    getURL: function(bounds) {        bounds = this.adjustBounds(bounds);        var res = this.getServerResolution();        var x = Math.round((bounds.left - this.maxExtent.left) / (res * this.tileSize.w));        var y = Math.round((this.maxExtent.top - bounds.top) / (res * this.tileSize.h));        var z = this.getServerZoom();        var limit = Math.pow(2, z);                if (y < 0 || y >= limit) {            return this.blankimage;        } else  {            x = ((x % limit) + limit) % limit;                        if (this.validBounds.intersectsBounds(bounds)) {                if (z >= 7 && z <= this.serverMaxlevel) {                    return this.url + z + "/" + x + "/" + y + "." + this.type;                } else if (z > this.serverMaxlevel) {                    var n = z - this.serverMaxlevel;                    var z2 = z - n;                    var nsize = 256 * Math.pow(2, n);                    var x = Math.round((bounds.left - this.maxExtent.left) / (res * nsize));                    var y = Math.round((this.maxExtent.top - bounds.top) / (res * nsize));                    x = ((x % limit) + limit) % limit;                                        return this.url + z2 + "/" + x + "/" + y + "." + this.type;                } else {                    return this.blankimage;                }            } else {                return this.blankimage;            }                }    },        CLASS_NAME: "OpenLayers.Layer.VWorldHybrid"});